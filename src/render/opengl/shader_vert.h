global CStr opengl_shader_vert =
    "#version 450 core\n"
    "\n"
    "layout (location = 0)  in vec2  instance_min;\n"
    "layout (location = 1)  in vec2  instance_max;\n"
    "layout (location = 2)  in mat4  instance_colors;\n"
    "layout (location = 6)  in vec4  instance_radies;\n"
    "layout (location = 7)  in float instance_softness;\n"
    "layout (location = 8)  in float instance_border_thickness;\n"
    "layout (location = 9)  in float instance_omit_texture;\n"
    "layout (location = 10) in float instance_is_subpixel_text;\n"
    "layout (location = 11) in float instance_use_nearest;\n"
    "layout (location = 12) in vec2  instance_min_uv;\n"
    "layout (location = 13) in vec2  instance_max_uv;\n"
    "\n"
    "out vec2  vert_pos;\n"
    "out vec2  vert_uv;\n"
    "out mat4  vert_colors;\n"
    "out float vert_softness;\n"
    "out float vert_border_thickness;\n"
    "out float vertex_id;\n"
    "out flat vec4 vert_radies;\n"
    "out flat float vert_omit_texture;\n"
    "out flat float vert_is_subpixel_text;\n"
    "out flat float vert_use_nearest;\n"
    "// TODO(simon): See if we can avoid passing these\n"
    "out flat vec2 vert_center;\n"
    "out flat vec2 vert_half_size;\n"
    "out flat vec2 vert_min_uv;\n"
    "out flat vec2 vert_max_uv;\n"
    "\n"
    "uniform mat4 uniform_projection;\n"
    "\n"
    "const vec2 verticies[] = {\n"
        "vec2(-1.0, -1.0),\n"
        "vec2(+1.0, -1.0),\n"
        "vec2(-1.0, +1.0),\n"
        "vec2(+1.0, +1.0)\n"
    "};\n"
    "\n"
    "void\n"
    "main()\n"
    "{\n"
        "vec2 center    = 0.5 * (instance_max + instance_min);\n"
        "vec2 half_size = 0.5 * (instance_max - instance_min);\n"
        "vec2 position  = center + (half_size + instance_softness) * verticies[gl_VertexID];\n"
        "vec2 uv_center    = 0.5 * (instance_max_uv + instance_min_uv);\n"
        "vec2 uv_half_size = 0.5 * (instance_max_uv - instance_min_uv);\n"
        "vec2 uv           = uv_center + (uv_half_size * (1.0 + instance_softness / half_size)) * verticies[gl_VertexID];\n"
    "\n"
        "gl_Position           = uniform_projection * vec4(position, 0.0, 1.0);\n"
        "vert_pos              = position;\n"
        "vert_uv               = uv;\n"
        "vert_colors           = instance_colors;\n"
        "vert_softness         = instance_softness;\n"
        "vert_border_thickness = instance_border_thickness;\n"
        "vertex_id             = gl_VertexID;\n"
        "vert_center           = center;\n"
        "vert_radies           = instance_radies;\n"
        "vert_omit_texture     = instance_omit_texture;\n"
        "vert_is_subpixel_text = instance_is_subpixel_text;\n"
        "vert_use_nearest      = instance_use_nearest;\n"
        "vert_half_size        = half_size;\n"
        "vert_min_uv           = instance_min_uv;\n"
        "vert_max_uv           = instance_max_uv;\n"
    "}\n";
